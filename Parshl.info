-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.2 from Parshl.y
-----------------------------------------------------------------------------


terminal L_err is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pBlk -> Blk                                 (1)
	%start_pStm -> Stm                                 (2)
	%start_pListStm -> ListStm                         (3)
	%start_pDec -> Dec                                 (4)
	%start_pFArg -> FArg                               (5)
	%start_pListFArg -> ListFArg                       (6)
	%start_pListDec -> ListDec                         (7)
	%start_pTyp -> Typ                                 (8)
	%start_pExp -> Exp                                 (9)
	%start_pExp2 -> Exp2                               (10)
	%start_pExp3 -> Exp3                               (11)
	%start_pExp4 -> Exp4                               (12)
	%start_pExp5 -> Exp5                               (13)
	%start_pExp1 -> Exp1                               (14)
	%start_pExp6 -> Exp6                               (15)
	%start_pConstraint -> Constraint                   (16)
	%start_pIParam -> IParam                           (17)
	%start_pListIParam -> ListIParam                   (18)
	Ident -> L_ident                                   (19)
	String -> L_quoted                                 (20)
	Integer -> L_integ                                 (21)
	Prog -> 'SOLUTION' Blk 'CYA'                       (22)
	Blk -> ListDec ListStm                             (23)
	Stm -> 'FOR' Ident 'IN' Exp 'DO' Blk 'DONE'        (24)
	Stm -> 'IF' Exp 'THEN' Blk 'FI'                    (25)
	Stm -> 'IF' Exp 'THEN' Blk 'ELSE' Blk 'FI'         (26)
	Stm -> 'RETURN' Exp ';'                            (27)
	Stm -> Exp ';'                                     (28)
	ListStm ->                                         (29)
	ListStm -> ListStm Stm                             (30)
	Dec -> Typ Ident ';'                               (31)
	Dec -> Typ Ident '=' Exp ';'                       (32)
	Dec -> Typ Ident '(' ListFArg ')' 'DO' Blk 'RETURNED'   (33)
	FArg -> Typ Ident                                  (34)
	FArg -> 'REF' Typ Ident                            (35)
	ListFArg ->                                        (36)
	ListFArg -> FArg                                   (37)
	ListFArg -> FArg ',' ListFArg                      (38)
	ListDec ->                                         (39)
	ListDec -> ListDec Dec                             (40)
	Typ -> 'Integer'                                   (41)
	Typ -> 'Boolean'                                   (42)
	Typ -> 'String'                                    (43)
	Exp -> Exp '=' Exp2                                (44)
	Exp -> Exp '==' Exp2                               (45)
	Exp -> Exp '!=' Exp2                               (46)
	Exp -> Exp1                                        (47)
	Exp2 -> Exp2 '<' Exp3                              (48)
	Exp2 -> Exp2 '>' Exp3                              (49)
	Exp2 -> Exp2 '<=' Exp3                             (50)
	Exp2 -> Exp2 '>=' Exp3                             (51)
	Exp2 -> Exp3                                       (52)
	Exp3 -> Exp3 '+' Exp4                              (53)
	Exp3 -> Exp3 '-' Exp4                              (54)
	Exp3 -> Exp4                                       (55)
	Exp4 -> Exp4 '*' Exp5                              (56)
	Exp4 -> Exp4 '/' Exp5                              (57)
	Exp4 -> Exp5                                       (58)
	Exp5 -> Ident '(' ListIParam ')'                   (59)
	Exp5 -> Ident                                      (60)
	Exp5 -> Constraint                                 (61)
	Exp5 -> String                                     (62)
	Exp5 -> Exp6                                       (63)
	Exp1 -> Exp2                                       (64)
	Exp6 -> '(' Exp ')'                                (65)
	Constraint -> Integer                              (66)
	Constraint -> 'True'                               (67)
	Constraint -> 'False'                              (68)
	IParam -> Exp                                      (69)
	ListIParam ->                                      (70)
	ListIParam -> IParam                               (71)
	ListIParam -> IParam ',' ListIParam                (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'-'            { PT _ (TS _ 7) }
	'/'            { PT _ (TS _ 8) }
	';'            { PT _ (TS _ 9) }
	'<'            { PT _ (TS _ 10) }
	'<='           { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'>'            { PT _ (TS _ 14) }
	'>='           { PT _ (TS _ 15) }
	'Boolean'      { PT _ (TS _ 16) }
	'CYA'          { PT _ (TS _ 17) }
	'DO'           { PT _ (TS _ 18) }
	'DONE'         { PT _ (TS _ 19) }
	'ELSE'         { PT _ (TS _ 20) }
	'FI'           { PT _ (TS _ 21) }
	'FOR'          { PT _ (TS _ 22) }
	'False'        { PT _ (TS _ 23) }
	'IF'           { PT _ (TS _ 24) }
	'IN'           { PT _ (TS _ 25) }
	'Integer'      { PT _ (TS _ 26) }
	'REF'          { PT _ (TS _ 27) }
	'RETURN'       { PT _ (TS _ 28) }
	'RETURNED'     { PT _ (TS _ 29) }
	'SOLUTION'     { PT _ (TS _ 30) }
	'String'       { PT _ (TS _ 31) }
	'THEN'         { PT _ (TS _ 32) }
	'True'         { PT _ (TS _ 33) }
	L_ident        { PT _ (TV $$) }
	L_quoted       { PT _ (TL $$) }
	L_integ        { PT _ (TI $$) }
	L_err          { _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pBlk     rule  1
	%start_pStm     rule  2
	%start_pListStm rule  3
	%start_pDec     rule  4
	%start_pFArg    rule  5
	%start_pListFArg rule  6
	%start_pListDec rule  7
	%start_pTyp     rule  8
	%start_pExp     rule  9
	%start_pExp2    rule  10
	%start_pExp3    rule  11
	%start_pExp4    rule  12
	%start_pExp5    rule  13
	%start_pExp1    rule  14
	%start_pExp6    rule  15
	%start_pConstraint rule  16
	%start_pIParam  rule  17
	%start_pListIParam rule  18
	Ident           rule  19
	String          rule  20
	Integer         rule  21
	Prog            rule  22
	Blk             rule  23
	Stm             rules 24, 25, 26, 27, 28
	ListStm         rules 29, 30
	Dec             rules 31, 32, 33
	FArg            rules 34, 35
	ListFArg        rules 36, 37, 38
	ListDec         rules 39, 40
	Typ             rules 41, 42, 43
	Exp             rules 44, 45, 46, 47
	Exp2            rules 48, 49, 50, 51, 52
	Exp3            rules 53, 54, 55
	Exp4            rules 56, 57, 58
	Exp5            rules 59, 60, 61, 62, 63
	Exp1            rule  64
	Exp6            rule  65
	Constraint      rules 66, 67, 68
	IParam          rule  69
	ListIParam      rules 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'SOLUTION'     shift, and enter state 69

	Prog           goto state 68

State 1


	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39
	%eof           reduce using rule 39

	Blk            goto state 66
	ListDec        goto state 67

State 2


	'('            shift, and enter state 34
	'FOR'          shift, and enter state 63
	'False'        shift, and enter state 35
	'IF'           shift, and enter state 64
	'RETURN'       shift, and enter state 65
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Stm            goto state 61
	Exp            goto state 62
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 3


	'('            reduce using rule 29
	'FOR'          reduce using rule 29
	'False'        reduce using rule 29
	'IF'           reduce using rule 29
	'RETURN'       reduce using rule 29
	'True'         reduce using rule 29
	L_ident        reduce using rule 29
	L_quoted       reduce using rule 29
	L_integ        reduce using rule 29
	%eof           reduce using rule 29

	ListStm        goto state 60

State 4


	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'String'       shift, and enter state 51

	Dec            goto state 58
	Typ            goto state 59

State 5


	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'REF'          shift, and enter state 56
	'String'       shift, and enter state 51

	FArg           goto state 57
	Typ            goto state 55

State 6


	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'REF'          shift, and enter state 56
	'String'       shift, and enter state 51
	%eof           reduce using rule 36

	FArg           goto state 53
	ListFArg       goto state 54
	Typ            goto state 55

State 7


	'Boolean'      reduce using rule 39
	'Integer'      reduce using rule 39
	'String'       reduce using rule 39
	%eof           reduce using rule 39

	ListDec        goto state 52

State 8


	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'String'       shift, and enter state 51

	Typ            goto state 48

State 9


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 47
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 10


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp2           goto state 46
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 11


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp3           goto state 45
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 12


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp4           goto state 44
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 13


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp5           goto state 43
	Exp6           goto state 30
	Constraint     goto state 31

State 14


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 42
	Exp6           goto state 30
	Constraint     goto state 31

State 15


	'('            shift, and enter state 34

	Exp6           goto state 41

State 16


	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_integ        shift, and enter state 38

	Integer        goto state 23
	Constraint     goto state 40

State 17


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 24
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31
	IParam         goto state 39

State 18


	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38
	%eof           reduce using rule 70

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 24
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31
	IParam         goto state 32
	ListIParam     goto state 33

State 19


	L_ident        shift, and enter state 20


State 20

	Ident -> L_ident .                                  (rule 19)

	'!='           reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'/'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'DO'           reduce using rule 19
	'IN'           reduce using rule 19
	'THEN'         reduce using rule 19
	%eof           reduce using rule 19


State 21

	Exp5 -> Ident . '(' ListIParam ')'                  (rule 59)
	Exp5 -> Ident .                                     (rule 60)

	'!='           reduce using rule 60
	'('            shift, and enter state 95
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'DO'           reduce using rule 60
	'THEN'         reduce using rule 60
	%eof           reduce using rule 60


State 22

	Exp5 -> String .                                    (rule 62)

	'!='           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'DO'           reduce using rule 62
	'THEN'         reduce using rule 62
	%eof           reduce using rule 62


State 23

	Constraint -> Integer .                             (rule 66)

	'!='           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'DO'           reduce using rule 66
	'THEN'         reduce using rule 66
	%eof           reduce using rule 66


State 24

	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)
	IParam -> Exp .                                     (rule 69)

	'!='           shift, and enter state 76
	')'            reduce using rule 69
	','            reduce using rule 69
	'='            shift, and enter state 78
	'=='           shift, and enter state 79
	%eof           reduce using rule 69


State 25

	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)
	Exp2 -> Exp2 . '<=' Exp3                            (rule 50)
	Exp2 -> Exp2 . '>=' Exp3                            (rule 51)
	Exp1 -> Exp2 .                                      (rule 64)

	'!='           reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'DO'           reduce using rule 64
	'THEN'         reduce using rule 64
	%eof           reduce using rule 64


State 26

	Exp2 -> Exp3 .                                      (rule 52)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'!='           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 89
	','            reduce using rule 52
	'-'            shift, and enter state 90
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'DO'           reduce using rule 52
	'THEN'         reduce using rule 52
	%eof           reduce using rule 52


State 27

	Exp3 -> Exp4 .                                      (rule 55)
	Exp4 -> Exp4 . '*' Exp5                             (rule 56)
	Exp4 -> Exp4 . '/' Exp5                             (rule 57)

	'!='           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 91
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 92
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'DO'           reduce using rule 55
	'THEN'         reduce using rule 55
	%eof           reduce using rule 55


State 28

	Exp4 -> Exp5 .                                      (rule 58)

	'!='           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'DO'           reduce using rule 58
	'THEN'         reduce using rule 58
	%eof           reduce using rule 58


State 29

	Exp -> Exp1 .                                       (rule 47)

	'!='           reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'DO'           reduce using rule 47
	'THEN'         reduce using rule 47
	%eof           reduce using rule 47


State 30

	Exp5 -> Exp6 .                                      (rule 63)

	'!='           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'DO'           reduce using rule 63
	'THEN'         reduce using rule 63
	%eof           reduce using rule 63


State 31

	Exp5 -> Constraint .                                (rule 61)

	'!='           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'DO'           reduce using rule 61
	'THEN'         reduce using rule 61
	%eof           reduce using rule 61


State 32

	ListIParam -> IParam .                              (rule 71)
	ListIParam -> IParam . ',' ListIParam               (rule 72)

	')'            reduce using rule 71
	','            shift, and enter state 94
	%eof           reduce using rule 71


State 33

	%start_pListIParam -> ListIParam .                  (rule 18)

	%eof           accept


State 34

	Exp6 -> '(' . Exp ')'                               (rule 65)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 93
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 35

	Constraint -> 'False' .                             (rule 68)

	'!='           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'DO'           reduce using rule 68
	'THEN'         reduce using rule 68
	%eof           reduce using rule 68


State 36

	Constraint -> 'True' .                              (rule 67)

	'!='           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'DO'           reduce using rule 67
	'THEN'         reduce using rule 67
	%eof           reduce using rule 67


State 37

	String -> L_quoted .                                (rule 20)

	'!='           reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'DO'           reduce using rule 20
	'THEN'         reduce using rule 20
	%eof           reduce using rule 20


State 38

	Integer -> L_integ .                                (rule 21)

	'!='           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'DO'           reduce using rule 21
	'THEN'         reduce using rule 21
	%eof           reduce using rule 21


State 39

	%start_pIParam -> IParam .                          (rule 17)

	%eof           accept


State 40

	%start_pConstraint -> Constraint .                  (rule 16)

	%eof           accept


State 41

	%start_pExp6 -> Exp6 .                              (rule 15)

	%eof           accept


State 42

	%start_pExp1 -> Exp1 .                              (rule 14)

	%eof           accept


State 43

	%start_pExp5 -> Exp5 .                              (rule 13)

	%eof           accept


State 44

	%start_pExp4 -> Exp4 .                              (rule 12)
	Exp4 -> Exp4 . '*' Exp5                             (rule 56)
	Exp4 -> Exp4 . '/' Exp5                             (rule 57)

	'*'            shift, and enter state 91
	'/'            shift, and enter state 92
	%eof           accept


State 45

	%start_pExp3 -> Exp3 .                              (rule 11)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	%eof           accept


State 46

	%start_pExp2 -> Exp2 .                              (rule 10)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)
	Exp2 -> Exp2 . '<=' Exp3                            (rule 50)
	Exp2 -> Exp2 . '>=' Exp3                            (rule 51)

	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	%eof           accept


State 47

	%start_pExp -> Exp .                                (rule 9)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	'='            shift, and enter state 78
	'=='           shift, and enter state 79
	%eof           accept


State 48

	%start_pTyp -> Typ .                                (rule 8)

	%eof           accept


State 49

	Typ -> 'Boolean' .                                  (rule 42)

	L_ident        reduce using rule 42
	%eof           reduce using rule 42


State 50

	Typ -> 'Integer' .                                  (rule 41)

	L_ident        reduce using rule 41
	%eof           reduce using rule 41


State 51

	Typ -> 'String' .                                   (rule 43)

	L_ident        reduce using rule 43
	%eof           reduce using rule 43


State 52

	%start_pListDec -> ListDec .                        (rule 7)
	ListDec -> ListDec . Dec                            (rule 40)

	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'String'       shift, and enter state 51
	%eof           accept

	Dec            goto state 72
	Typ            goto state 59

State 53

	ListFArg -> FArg .                                  (rule 37)
	ListFArg -> FArg . ',' ListFArg                     (rule 38)

	')'            reduce using rule 37
	','            shift, and enter state 84
	%eof           reduce using rule 37


State 54

	%start_pListFArg -> ListFArg .                      (rule 6)

	%eof           accept


State 55

	FArg -> Typ . Ident                                 (rule 34)

	L_ident        shift, and enter state 20

	Ident          goto state 83

State 56

	FArg -> 'REF' . Typ Ident                           (rule 35)

	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'String'       shift, and enter state 51

	Typ            goto state 82

State 57

	%start_pFArg -> FArg .                              (rule 5)

	%eof           accept


State 58

	%start_pDec -> Dec .                                (rule 4)

	%eof           accept


State 59

	Dec -> Typ . Ident ';'                              (rule 31)
	Dec -> Typ . Ident '=' Exp ';'                      (rule 32)
	Dec -> Typ . Ident '(' ListFArg ')' 'DO' Blk 'RETURNED'    (rule 33)

	L_ident        shift, and enter state 20

	Ident          goto state 81

State 60

	%start_pListStm -> ListStm .                        (rule 3)
	ListStm -> ListStm . Stm                            (rule 30)

	'('            shift, and enter state 34
	'FOR'          shift, and enter state 63
	'False'        shift, and enter state 35
	'IF'           shift, and enter state 64
	'RETURN'       shift, and enter state 65
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38
	%eof           accept

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Stm            goto state 80
	Exp            goto state 62
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 61

	%start_pStm -> Stm .                                (rule 2)

	%eof           accept


State 62

	Stm -> Exp . ';'                                    (rule 28)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	';'            shift, and enter state 77
	'='            shift, and enter state 78
	'=='           shift, and enter state 79


State 63

	Stm -> 'FOR' . Ident 'IN' Exp 'DO' Blk 'DONE'       (rule 24)

	L_ident        shift, and enter state 20

	Ident          goto state 75

State 64

	Stm -> 'IF' . Exp 'THEN' Blk 'FI'                   (rule 25)
	Stm -> 'IF' . Exp 'THEN' Blk 'ELSE' Blk 'FI'        (rule 26)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 74
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 65

	Stm -> 'RETURN' . Exp ';'                           (rule 27)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 73
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 66

	%start_pBlk -> Blk .                                (rule 1)

	%eof           accept


State 67

	Blk -> ListDec . ListStm                            (rule 23)
	ListDec -> ListDec . Dec                            (rule 40)

	'('            reduce using rule 29
	'Boolean'      shift, and enter state 49
	'CYA'          reduce using rule 29
	'DONE'         reduce using rule 29
	'ELSE'         reduce using rule 29
	'FI'           reduce using rule 29
	'FOR'          reduce using rule 29
	'False'        reduce using rule 29
	'IF'           reduce using rule 29
	'Integer'      shift, and enter state 50
	'RETURN'       reduce using rule 29
	'RETURNED'     reduce using rule 29
	'String'       shift, and enter state 51
	'True'         reduce using rule 29
	L_ident        reduce using rule 29
	L_quoted       reduce using rule 29
	L_integ        reduce using rule 29
	%eof           reduce using rule 29

	ListStm        goto state 71
	Dec            goto state 72
	Typ            goto state 59

State 68

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 69

	Prog -> 'SOLUTION' . Blk 'CYA'                      (rule 22)

	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'CYA'          reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39

	Blk            goto state 70
	ListDec        goto state 67

State 70

	Prog -> 'SOLUTION' Blk . 'CYA'                      (rule 22)

	'CYA'          shift, and enter state 118


State 71

	Blk -> ListDec ListStm .                            (rule 23)
	ListStm -> ListStm . Stm                            (rule 30)

	'('            shift, and enter state 34
	'CYA'          reduce using rule 23
	'DONE'         reduce using rule 23
	'ELSE'         reduce using rule 23
	'FI'           reduce using rule 23
	'FOR'          shift, and enter state 63
	'False'        shift, and enter state 35
	'IF'           shift, and enter state 64
	'RETURN'       shift, and enter state 65
	'RETURNED'     reduce using rule 23
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38
	%eof           reduce using rule 23

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Stm            goto state 80
	Exp            goto state 62
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 72

	ListDec -> ListDec Dec .                            (rule 40)

	'('            reduce using rule 40
	'Boolean'      reduce using rule 40
	'CYA'          reduce using rule 40
	'DONE'         reduce using rule 40
	'ELSE'         reduce using rule 40
	'FI'           reduce using rule 40
	'FOR'          reduce using rule 40
	'False'        reduce using rule 40
	'IF'           reduce using rule 40
	'Integer'      reduce using rule 40
	'RETURN'       reduce using rule 40
	'RETURNED'     reduce using rule 40
	'String'       reduce using rule 40
	'True'         reduce using rule 40
	L_ident        reduce using rule 40
	L_quoted       reduce using rule 40
	L_integ        reduce using rule 40
	%eof           reduce using rule 40


State 73

	Stm -> 'RETURN' Exp . ';'                           (rule 27)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	';'            shift, and enter state 117
	'='            shift, and enter state 78
	'=='           shift, and enter state 79


State 74

	Stm -> 'IF' Exp . 'THEN' Blk 'FI'                   (rule 25)
	Stm -> 'IF' Exp . 'THEN' Blk 'ELSE' Blk 'FI'        (rule 26)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	'='            shift, and enter state 78
	'=='           shift, and enter state 79
	'THEN'         shift, and enter state 116


State 75

	Stm -> 'FOR' Ident . 'IN' Exp 'DO' Blk 'DONE'       (rule 24)

	'IN'           shift, and enter state 115


State 76

	Exp -> Exp '!=' . Exp2                              (rule 46)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp2           goto state 114
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 77

	Stm -> Exp ';' .                                    (rule 28)

	'('            reduce using rule 28
	'CYA'          reduce using rule 28
	'DONE'         reduce using rule 28
	'ELSE'         reduce using rule 28
	'FI'           reduce using rule 28
	'FOR'          reduce using rule 28
	'False'        reduce using rule 28
	'IF'           reduce using rule 28
	'RETURN'       reduce using rule 28
	'RETURNED'     reduce using rule 28
	'True'         reduce using rule 28
	L_ident        reduce using rule 28
	L_quoted       reduce using rule 28
	L_integ        reduce using rule 28
	%eof           reduce using rule 28


State 78

	Exp -> Exp '=' . Exp2                               (rule 44)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp2           goto state 113
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 79

	Exp -> Exp '==' . Exp2                              (rule 45)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp2           goto state 112
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 80

	ListStm -> ListStm Stm .                            (rule 30)

	'('            reduce using rule 30
	'CYA'          reduce using rule 30
	'DONE'         reduce using rule 30
	'ELSE'         reduce using rule 30
	'FI'           reduce using rule 30
	'FOR'          reduce using rule 30
	'False'        reduce using rule 30
	'IF'           reduce using rule 30
	'RETURN'       reduce using rule 30
	'RETURNED'     reduce using rule 30
	'True'         reduce using rule 30
	L_ident        reduce using rule 30
	L_quoted       reduce using rule 30
	L_integ        reduce using rule 30
	%eof           reduce using rule 30


State 81

	Dec -> Typ Ident . ';'                              (rule 31)
	Dec -> Typ Ident . '=' Exp ';'                      (rule 32)
	Dec -> Typ Ident . '(' ListFArg ')' 'DO' Blk 'RETURNED'    (rule 33)

	'('            shift, and enter state 109
	';'            shift, and enter state 110
	'='            shift, and enter state 111


State 82

	FArg -> 'REF' Typ . Ident                           (rule 35)

	L_ident        shift, and enter state 20

	Ident          goto state 108

State 83

	FArg -> Typ Ident .                                 (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	%eof           reduce using rule 34


State 84

	ListFArg -> FArg ',' . ListFArg                     (rule 38)

	')'            reduce using rule 36
	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'REF'          shift, and enter state 56
	'String'       shift, and enter state 51
	%eof           reduce using rule 36

	FArg           goto state 53
	ListFArg       goto state 107
	Typ            goto state 55

State 85

	Exp2 -> Exp2 '<' . Exp3                             (rule 48)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp3           goto state 106
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 86

	Exp2 -> Exp2 '<=' . Exp3                            (rule 50)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp3           goto state 105
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 87

	Exp2 -> Exp2 '>' . Exp3                             (rule 49)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp3           goto state 104
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 88

	Exp2 -> Exp2 '>=' . Exp3                            (rule 51)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp3           goto state 103
	Exp4           goto state 27
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 89

	Exp3 -> Exp3 '+' . Exp4                             (rule 53)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp4           goto state 102
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 90

	Exp3 -> Exp3 '-' . Exp4                             (rule 54)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp4           goto state 101
	Exp5           goto state 28
	Exp6           goto state 30
	Constraint     goto state 31

State 91

	Exp4 -> Exp4 '*' . Exp5                             (rule 56)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp5           goto state 100
	Exp6           goto state 30
	Constraint     goto state 31

State 92

	Exp4 -> Exp4 '/' . Exp5                             (rule 57)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp5           goto state 99
	Exp6           goto state 30
	Constraint     goto state 31

State 93

	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)
	Exp6 -> '(' Exp . ')'                               (rule 65)

	'!='           shift, and enter state 76
	')'            shift, and enter state 98
	'='            shift, and enter state 78
	'=='           shift, and enter state 79


State 94

	ListIParam -> IParam ',' . ListIParam               (rule 72)

	'('            shift, and enter state 34
	')'            reduce using rule 70
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38
	%eof           reduce using rule 70

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 24
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31
	IParam         goto state 32
	ListIParam     goto state 97

State 95

	Exp5 -> Ident '(' . ListIParam ')'                  (rule 59)

	'('            shift, and enter state 34
	')'            reduce using rule 70
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 24
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31
	IParam         goto state 32
	ListIParam     goto state 96

State 96

	Exp5 -> Ident '(' ListIParam . ')'                  (rule 59)

	')'            shift, and enter state 123


State 97

	ListIParam -> IParam ',' ListIParam .               (rule 72)

	')'            reduce using rule 72
	%eof           reduce using rule 72


State 98

	Exp6 -> '(' Exp ')' .                               (rule 65)

	'!='           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'DO'           reduce using rule 65
	'THEN'         reduce using rule 65
	%eof           reduce using rule 65


State 99

	Exp4 -> Exp4 '/' Exp5 .                             (rule 57)

	'!='           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'DO'           reduce using rule 57
	'THEN'         reduce using rule 57
	%eof           reduce using rule 57


State 100

	Exp4 -> Exp4 '*' Exp5 .                             (rule 56)

	'!='           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'DO'           reduce using rule 56
	'THEN'         reduce using rule 56
	%eof           reduce using rule 56


State 101

	Exp3 -> Exp3 '-' Exp4 .                             (rule 54)
	Exp4 -> Exp4 . '*' Exp5                             (rule 56)
	Exp4 -> Exp4 . '/' Exp5                             (rule 57)

	'!='           reduce using rule 54
	')'            reduce using rule 54
	'*'            shift, and enter state 91
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 92
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'DO'           reduce using rule 54
	'THEN'         reduce using rule 54
	%eof           reduce using rule 54


State 102

	Exp3 -> Exp3 '+' Exp4 .                             (rule 53)
	Exp4 -> Exp4 . '*' Exp5                             (rule 56)
	Exp4 -> Exp4 . '/' Exp5                             (rule 57)

	'!='           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 91
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 92
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'DO'           reduce using rule 53
	'THEN'         reduce using rule 53
	%eof           reduce using rule 53


State 103

	Exp2 -> Exp2 '>=' Exp3 .                            (rule 51)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'!='           reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 89
	','            reduce using rule 51
	'-'            shift, and enter state 90
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'DO'           reduce using rule 51
	'THEN'         reduce using rule 51
	%eof           reduce using rule 51


State 104

	Exp2 -> Exp2 '>' Exp3 .                             (rule 49)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'!='           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 89
	','            reduce using rule 49
	'-'            shift, and enter state 90
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'DO'           reduce using rule 49
	'THEN'         reduce using rule 49
	%eof           reduce using rule 49


State 105

	Exp2 -> Exp2 '<=' Exp3 .                            (rule 50)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'!='           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 89
	','            reduce using rule 50
	'-'            shift, and enter state 90
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'DO'           reduce using rule 50
	'THEN'         reduce using rule 50
	%eof           reduce using rule 50


State 106

	Exp2 -> Exp2 '<' Exp3 .                             (rule 48)
	Exp3 -> Exp3 . '+' Exp4                             (rule 53)
	Exp3 -> Exp3 . '-' Exp4                             (rule 54)

	'!='           reduce using rule 48
	')'            reduce using rule 48
	'+'            shift, and enter state 89
	','            reduce using rule 48
	'-'            shift, and enter state 90
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'DO'           reduce using rule 48
	'THEN'         reduce using rule 48
	%eof           reduce using rule 48


State 107

	ListFArg -> FArg ',' ListFArg .                     (rule 38)

	')'            reduce using rule 38
	%eof           reduce using rule 38


State 108

	FArg -> 'REF' Typ Ident .                           (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	%eof           reduce using rule 35


State 109

	Dec -> Typ Ident '(' . ListFArg ')' 'DO' Blk 'RETURNED'    (rule 33)

	')'            reduce using rule 36
	'Boolean'      shift, and enter state 49
	'Integer'      shift, and enter state 50
	'REF'          shift, and enter state 56
	'String'       shift, and enter state 51

	FArg           goto state 53
	ListFArg       goto state 122
	Typ            goto state 55

State 110

	Dec -> Typ Ident ';' .                              (rule 31)

	'('            reduce using rule 31
	'Boolean'      reduce using rule 31
	'CYA'          reduce using rule 31
	'DONE'         reduce using rule 31
	'ELSE'         reduce using rule 31
	'FI'           reduce using rule 31
	'FOR'          reduce using rule 31
	'False'        reduce using rule 31
	'IF'           reduce using rule 31
	'Integer'      reduce using rule 31
	'RETURN'       reduce using rule 31
	'RETURNED'     reduce using rule 31
	'String'       reduce using rule 31
	'True'         reduce using rule 31
	L_ident        reduce using rule 31
	L_quoted       reduce using rule 31
	L_integ        reduce using rule 31
	%eof           reduce using rule 31


State 111

	Dec -> Typ Ident '=' . Exp ';'                      (rule 32)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 121
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 112

	Exp -> Exp '==' Exp2 .                              (rule 45)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)
	Exp2 -> Exp2 . '<=' Exp3                            (rule 50)
	Exp2 -> Exp2 . '>=' Exp3                            (rule 51)

	'!='           reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'DO'           reduce using rule 45
	'THEN'         reduce using rule 45
	%eof           reduce using rule 45


State 113

	Exp -> Exp '=' Exp2 .                               (rule 44)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)
	Exp2 -> Exp2 . '<=' Exp3                            (rule 50)
	Exp2 -> Exp2 . '>=' Exp3                            (rule 51)

	'!='           reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'DO'           reduce using rule 44
	'THEN'         reduce using rule 44
	%eof           reduce using rule 44


State 114

	Exp -> Exp '!=' Exp2 .                              (rule 46)
	Exp2 -> Exp2 . '<' Exp3                             (rule 48)
	Exp2 -> Exp2 . '>' Exp3                             (rule 49)
	Exp2 -> Exp2 . '<=' Exp3                            (rule 50)
	Exp2 -> Exp2 . '>=' Exp3                            (rule 51)

	'!='           reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'DO'           reduce using rule 46
	'THEN'         reduce using rule 46
	%eof           reduce using rule 46


State 115

	Stm -> 'FOR' Ident 'IN' . Exp 'DO' Blk 'DONE'       (rule 24)

	'('            shift, and enter state 34
	'False'        shift, and enter state 35
	'True'         shift, and enter state 36
	L_ident        shift, and enter state 20
	L_quoted       shift, and enter state 37
	L_integ        shift, and enter state 38

	Ident          goto state 21
	String         goto state 22
	Integer        goto state 23
	Exp            goto state 120
	Exp2           goto state 25
	Exp3           goto state 26
	Exp4           goto state 27
	Exp5           goto state 28
	Exp1           goto state 29
	Exp6           goto state 30
	Constraint     goto state 31

State 116

	Stm -> 'IF' Exp 'THEN' . Blk 'FI'                   (rule 25)
	Stm -> 'IF' Exp 'THEN' . Blk 'ELSE' Blk 'FI'        (rule 26)

	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'ELSE'         reduce using rule 39
	'FI'           reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39

	Blk            goto state 119
	ListDec        goto state 67

State 117

	Stm -> 'RETURN' Exp ';' .                           (rule 27)

	'('            reduce using rule 27
	'CYA'          reduce using rule 27
	'DONE'         reduce using rule 27
	'ELSE'         reduce using rule 27
	'FI'           reduce using rule 27
	'FOR'          reduce using rule 27
	'False'        reduce using rule 27
	'IF'           reduce using rule 27
	'RETURN'       reduce using rule 27
	'RETURNED'     reduce using rule 27
	'True'         reduce using rule 27
	L_ident        reduce using rule 27
	L_quoted       reduce using rule 27
	L_integ        reduce using rule 27
	%eof           reduce using rule 27


State 118

	Prog -> 'SOLUTION' Blk 'CYA' .                      (rule 22)

	%eof           reduce using rule 22


State 119

	Stm -> 'IF' Exp 'THEN' Blk . 'FI'                   (rule 25)
	Stm -> 'IF' Exp 'THEN' Blk . 'ELSE' Blk 'FI'        (rule 26)

	'ELSE'         shift, and enter state 127
	'FI'           shift, and enter state 128


State 120

	Stm -> 'FOR' Ident 'IN' Exp . 'DO' Blk 'DONE'       (rule 24)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	'='            shift, and enter state 78
	'=='           shift, and enter state 79
	'DO'           shift, and enter state 126


State 121

	Dec -> Typ Ident '=' Exp . ';'                      (rule 32)
	Exp -> Exp . '=' Exp2                               (rule 44)
	Exp -> Exp . '==' Exp2                              (rule 45)
	Exp -> Exp . '!=' Exp2                              (rule 46)

	'!='           shift, and enter state 76
	';'            shift, and enter state 125
	'='            shift, and enter state 78
	'=='           shift, and enter state 79


State 122

	Dec -> Typ Ident '(' ListFArg . ')' 'DO' Blk 'RETURNED'    (rule 33)

	')'            shift, and enter state 124


State 123

	Exp5 -> Ident '(' ListIParam ')' .                  (rule 59)

	'!='           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'DO'           reduce using rule 59
	'THEN'         reduce using rule 59
	%eof           reduce using rule 59


State 124

	Dec -> Typ Ident '(' ListFArg ')' . 'DO' Blk 'RETURNED'    (rule 33)

	'DO'           shift, and enter state 131


State 125

	Dec -> Typ Ident '=' Exp ';' .                      (rule 32)

	'('            reduce using rule 32
	'Boolean'      reduce using rule 32
	'CYA'          reduce using rule 32
	'DONE'         reduce using rule 32
	'ELSE'         reduce using rule 32
	'FI'           reduce using rule 32
	'FOR'          reduce using rule 32
	'False'        reduce using rule 32
	'IF'           reduce using rule 32
	'Integer'      reduce using rule 32
	'RETURN'       reduce using rule 32
	'RETURNED'     reduce using rule 32
	'String'       reduce using rule 32
	'True'         reduce using rule 32
	L_ident        reduce using rule 32
	L_quoted       reduce using rule 32
	L_integ        reduce using rule 32
	%eof           reduce using rule 32


State 126

	Stm -> 'FOR' Ident 'IN' Exp 'DO' . Blk 'DONE'       (rule 24)

	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'DONE'         reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39

	Blk            goto state 130
	ListDec        goto state 67

State 127

	Stm -> 'IF' Exp 'THEN' Blk 'ELSE' . Blk 'FI'        (rule 26)

	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'FI'           reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39

	Blk            goto state 129
	ListDec        goto state 67

State 128

	Stm -> 'IF' Exp 'THEN' Blk 'FI' .                   (rule 25)

	'('            reduce using rule 25
	'CYA'          reduce using rule 25
	'DONE'         reduce using rule 25
	'ELSE'         reduce using rule 25
	'FI'           reduce using rule 25
	'FOR'          reduce using rule 25
	'False'        reduce using rule 25
	'IF'           reduce using rule 25
	'RETURN'       reduce using rule 25
	'RETURNED'     reduce using rule 25
	'True'         reduce using rule 25
	L_ident        reduce using rule 25
	L_quoted       reduce using rule 25
	L_integ        reduce using rule 25
	%eof           reduce using rule 25


State 129

	Stm -> 'IF' Exp 'THEN' Blk 'ELSE' Blk . 'FI'        (rule 26)

	'FI'           shift, and enter state 134


State 130

	Stm -> 'FOR' Ident 'IN' Exp 'DO' Blk . 'DONE'       (rule 24)

	'DONE'         shift, and enter state 133


State 131

	Dec -> Typ Ident '(' ListFArg ')' 'DO' . Blk 'RETURNED'    (rule 33)

	'('            reduce using rule 39
	'Boolean'      reduce using rule 39
	'FOR'          reduce using rule 39
	'False'        reduce using rule 39
	'IF'           reduce using rule 39
	'Integer'      reduce using rule 39
	'RETURN'       reduce using rule 39
	'RETURNED'     reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	L_ident        reduce using rule 39
	L_quoted       reduce using rule 39
	L_integ        reduce using rule 39

	Blk            goto state 132
	ListDec        goto state 67

State 132

	Dec -> Typ Ident '(' ListFArg ')' 'DO' Blk . 'RETURNED'    (rule 33)

	'RETURNED'     shift, and enter state 135


State 133

	Stm -> 'FOR' Ident 'IN' Exp 'DO' Blk 'DONE' .       (rule 24)

	'('            reduce using rule 24
	'CYA'          reduce using rule 24
	'DONE'         reduce using rule 24
	'ELSE'         reduce using rule 24
	'FI'           reduce using rule 24
	'FOR'          reduce using rule 24
	'False'        reduce using rule 24
	'IF'           reduce using rule 24
	'RETURN'       reduce using rule 24
	'RETURNED'     reduce using rule 24
	'True'         reduce using rule 24
	L_ident        reduce using rule 24
	L_quoted       reduce using rule 24
	L_integ        reduce using rule 24
	%eof           reduce using rule 24


State 134

	Stm -> 'IF' Exp 'THEN' Blk 'ELSE' Blk 'FI' .        (rule 26)

	'('            reduce using rule 26
	'CYA'          reduce using rule 26
	'DONE'         reduce using rule 26
	'ELSE'         reduce using rule 26
	'FI'           reduce using rule 26
	'FOR'          reduce using rule 26
	'False'        reduce using rule 26
	'IF'           reduce using rule 26
	'RETURN'       reduce using rule 26
	'RETURNED'     reduce using rule 26
	'True'         reduce using rule 26
	L_ident        reduce using rule 26
	L_quoted       reduce using rule 26
	L_integ        reduce using rule 26
	%eof           reduce using rule 26


State 135

	Dec -> Typ Ident '(' ListFArg ')' 'DO' Blk 'RETURNED' .    (rule 33)

	'('            reduce using rule 33
	'Boolean'      reduce using rule 33
	'CYA'          reduce using rule 33
	'DONE'         reduce using rule 33
	'ELSE'         reduce using rule 33
	'FI'           reduce using rule 33
	'FOR'          reduce using rule 33
	'False'        reduce using rule 33
	'IF'           reduce using rule 33
	'Integer'      reduce using rule 33
	'RETURN'       reduce using rule 33
	'RETURNED'     reduce using rule 33
	'String'       reduce using rule 33
	'True'         reduce using rule 33
	L_ident        reduce using rule 33
	L_quoted       reduce using rule 33
	L_integ        reduce using rule 33
	%eof           reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 37
Number of non-terminals: 41
Number of states: 136
